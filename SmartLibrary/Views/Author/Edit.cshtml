@model SmartLibrary.Models.ViewModels.Author.EditAuthorViewModel

@{
    ViewBag.Title = "Chỉnh Sửa Tác Giả";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h3 class="mb-0">Chỉnh Sửa Tác Giả</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "Author", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-4 d-flex flex-column align-items-center">
                    <label class="form-label fw-bold">Ảnh Bìa</label>
                    <input type="file" id="AvatarImage" name="AvatarImage" class="form-control" accept="image/*" onchange="previewImage(event)" />
                    <img id="imagePreview" src="@(!string.IsNullOrEmpty(Model.AvatarImage) ? Url.Content(Model.AvatarImage) : "#")"
                         class="img-fluid mt-3 shadow"
                         style="@(string.IsNullOrEmpty(Model.AvatarImage) ? "display:none;" : "") max-width: 200px; max-height: 200px;" />
                    @Html.ValidationMessageFor(model => model.AvatarImage, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-8">
                    @Html.HiddenFor(model => model.Id)

                    <div class="mb-3">
                        @Html.LabelFor(model => model.AuthorName, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label fw-bold" })
                        <input type="date" class="form-control" name="DateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")" />
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Biography, new { @class = "form-label fw-bold" })
                        <textarea class="form-control" name="Biography" rows="4">@Model.Biography</textarea>
                        @Html.ValidationMessageFor(model => model.Biography, "", new { @class = "text-danger" })
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-success"><i class="bi bi-save"></i> Lưu</button>
                        <a href="@Url.Action("Index")" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Quay lại</a>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById("imagePreview");
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = "block";
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = "#";
                preview.style.display = "none";
            }
        }
    </script>
}
