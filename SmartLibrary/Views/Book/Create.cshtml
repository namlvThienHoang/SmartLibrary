@model SmartLibrary.Models.ViewModels.Book.CreateBookViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Thêm mới sách</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedAuthorIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedAuthorIds, Model.Authors, new { @class = "form-control", multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.SelectedAuthorIds, "", new { @class = "text-danger" })
            </div>
            <p>
                @Html.ActionLink("Thêm mới tác giả", "Create", "Author")
            </p>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedCategoryIds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedCategoryIds, Model.Categories, new { @class = "form-control", multiple = "multiple" })
                @Html.ValidationMessageFor(model => model.SelectedCategoryIds, "", new { @class = "text-danger" })
                <p>
                    @Html.ActionLink("Thêm mới loại sách", "Create", "Category")
                </p>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 5 })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PublishedDate, new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCopies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCopies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalCopies, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="CoverImage" name="CoverImage" class="form-control" accept="image/*" onchange="previewImage(event)" />
                @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
                <div class="mt-3">
                    <img id="imagePreview" src="#" alt="Selected Image" style="display:none; max-width: 200px; max-height: 200px;" />
                </div>
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại danh sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById("imagePreview");
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = "block"; // Hiển thị ảnh
                };
                reader.readAsDataURL(input.files[0]); // Đọc file ảnh
            } else {
                preview.src = "#";
                preview.style.display = "none"; // Ẩn ảnh nếu không có file
            }
        }
    </script>
}
