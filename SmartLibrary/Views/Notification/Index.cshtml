@model IEnumerable<SmartLibrary.Models.ViewModels.Notification.NotificationViewModel>


<div class="card mb-4">
    <div class="card-header">
        <h4 class="card-title d-flex justify-content-between">
            Danh sách
            @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-primary" })
        </h4>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-striped" id="notificationTable">
                <thead>
                    <tr>
                        <th>Nội dung</th>
                        <th>Ngày tạo</th>
                        <th>Trạng thái</th>
                        <th class="text-center">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-id="@item.NotificationId">
                            <td>@Html.DisplayFor(modelItem => item.Message)</td>
                            <td>@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                            <td class="status">@(item.IsRead ? "Đã đọc" : "Chưa đọc")</td>
                            <td class="text-center">
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                                        <i class="fa-solid fa-gear"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a href="@Url.Action("Details", new { id = item.NotificationId })" class="dropdown-item"><i class="fa-solid fa-eye me-2"></i> Xem chi tiết</a></li>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <li><a href="@Url.Action("Edit", new { id = item.NotificationId })" class="dropdown-item"><i class="fa-solid fa-pen-to-square me-2"></i> Chỉnh sửa</a></li>
                                            <li><a href="@Url.Action("Delete", new { id = item.NotificationId })" class="dropdown-item text-danger"><i class="fa-solid fa-trash me-2"></i> Xóa</a></li>
                                        }
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>
</div>

@section scripts {
    <!-- The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!-- Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <!-- Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!-- SignalR script to update the notification page in real-time. -->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var notificationHub = $.connection.notificationHub;

            // Create a function that the hub can call back to update the UI.
            notificationHub.client.receiveNotification = function (notification) {
                addNotification(notification);
                updateNotificationCount();
            };

            // Start the connection.
            $.connection.hub.start().done(function () {
                console.log("Connected to SignalR hub.");
            });

            // Function to add a new notification row in the table
            function addNotification(notification) {
                var tableBody = $("#notificationTable tbody");

                var newRow = $("<tr>").attr("data-id", notification.id).css("background-color", "#ffffcc");

                newRow.append($("<td>").text(notification.message));
                newRow.append($("<td>").text(new Date(notification.createdDate).toLocaleString()));
                newRow.append($("<td>").addClass("status").text("Chưa đọc"));

                var actionTd = $("<td>").addClass("text-center");
                var btnGroup = $("<div>").addClass("btn-group");

                var dropdownButton = $("<button>")
                    .addClass("btn btn-sm btn-outline-secondary dropdown-toggle")
                    .attr("data-bs-toggle", "dropdown")
                    .html('<i class="fa-solid fa-gear"></i>');

                var dropdownMenu = $("<ul>").addClass("dropdown-menu");
                dropdownMenu.append(getActionButtons(notification));

                btnGroup.append(dropdownButton).append(dropdownMenu);
                actionTd.append(btnGroup);
                newRow.append(actionTd);

                tableBody.prepend(newRow); // Add new row to the top
            }

            // Function to update the notification count
            //function updateNotificationCount() {
            //    var countElement = $("#notificationCount");
            //    var count = parseInt(countElement.text()) || 0;
            //    countElement.text(count + 1);
            //    countElement.removeClass("d-none");
            //}
        });
    </script>
}





