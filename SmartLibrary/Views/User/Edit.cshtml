@model SmartLibrary.Models.ViewModels.User.EditUserViewModel

@{
    ViewBag.Title = "Chỉnh Sửa Người Dùng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h3 class="mb-0">Chỉnh Sửa Người Dùng</h3>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.Id)

                <div class="row">
                    <!-- Cột trái: Avatar -->
                    <div class="col-md-4 d-flex flex-column align-items-center">
                        <label class="form-label fw-bold">Ảnh đại diện</label>
                        <input type="file" id="AvatarFile" name="AvatarFile" class="form-control" accept="image/*" onchange="previewImage(event)" />
                        <div class="mt-3">
                            <img id="imagePreview" src="@Model.AvatarURL" alt="Ảnh đại diện" class="img-fluid rounded shadow" style="max-width: 200px; max-height: 200px;" />
                        </div>
                    </div>

                    <!-- Cột phải: Form thông tin -->
                    <div class="col-md-8">
                        <div class="mb-3">
                            @Html.LabelFor(model => model.FullName, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Email, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.PhoneNumber, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.DateOfBirth, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Address, new { @class = "form-label fw-bold" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Role, new { @class = "form-label fw-bold" })
                            @Html.ListBoxFor(model => model.Role, (SelectList)ViewBag.Roles, new { @class = "form-control select2", multiple = "multiple" })
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.Status, new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(model => model.Status, new SelectList(new[]
                            {
                                new { Value = "Active", Text = "Hoạt động" },
                                new { Value = "Inactive", Text = "Không hoạt động" }
                            }, "Value", "Text"), "Chọn trạng thái", new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-success"><i class="bi bi-save"></i> Lưu</button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary"><i class="bi bi-arrow-left"></i> Quay lại</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0/dist/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.select2').select2({
                placeholder: "Chọn một hoặc nhiều mục",
                allowClear: true,
                width: '100%'
            });
        });

        function previewImage(event) {
            const input = event.target;
            const preview = document.getElementById("imagePreview");
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
